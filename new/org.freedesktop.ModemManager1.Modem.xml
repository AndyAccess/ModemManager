<?xml version="1.0" encoding="UTF-8" ?>

<!--
 ModemManager 0.6 Interface Specification

   Copyright (C) 2008 Novell, Inc.
   Copyright (C) 2008-2011 Red Hat, Inc.
   Copyright (C) 2011 The Chromium OS Authors
   Copyright (C) 2011 Google, Inc.
-->

<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">

  <!--
      org.freedesktop.ModemManager1.Modem:
      @short_description: The ModemManager Modem interface.

      The Modem interface controls the status and actions in a given modem
      object.
  -->
  <interface name="org.freedesktop.ModemManager1.Modem">

    <!--
        Enable:
        @enable: %TRUE to enable the modem and %FALSE to disable it.

        Enable or disable the modem.

        When enabled, the modem's radio is powered on and data sessions, voice
        calls, location services, and Short Message Service may be available.

        When disabled, the modem enters low-power state and no network-related
        operations are available.
    -->
    <method name="Enable">
      <arg name="enable" type="b" direction="in" />
    </method>

    <!--
        ListBearers:
        @bearers: The list of bearer object paths.

        List configured packet data bearers (EPS Bearers, PDP Contexts, or
        CDMA2000 Packet Data Sessions).
    -->
    <method name="ListBearers">
      <arg name="bearers" type="ao" direction="out" />
    </method>

    <!--
        CreateBearer:
        @properties: List of properties to assign to the bearer after creating it.
        @path: On success, the object path of the newly created bearer.

        Create a new packet data bearer using the given characteristics.

        This request may fail if the modem does not support additional bearers,
        if too many bearers are already defined, or if properties are invalid.

        Allowed properties are:
        <variablelist>
        <varlistentry><term><literal>"apn"</literal></term>
          <listitem><para>Access Point Name. Required in 3GPP.</para></listitem></varlistentry>
        <varlistentry><term><literal>"ip-type"</literal></term>
          <listitem><para>Addressing type, one of <literal>"IPV4"</literal>, <literal>"IPV4V6"</literal>, or <literal>"IPV6"</literal>. Optional in 3GPP and CDMA.</para></listitem></varlistentry>
        <varlistentry><term><literal>"user"</literal></term>
          <listitem><para>User name (if any) required by the network. Optional in 3GPP.</para></listitem></varlistentry>
        <varlistentry><term><literal>"password"</literal></term>
          <listitem><para>Password (if any) required by the network. Optional in 3GPP.</para></listitem></varlistentry>
        <varlistentry><term><literal>"number"</literal></term>
          <listitem><para>Telephone number to dial. Required in POTS.</para></listitem></varlistentry>
        </variablelist>

        Some properties are only applicable to a bearer of certain access
        technologies, for example the <literal>"apn"</literal> property is not
        applicable to CDMA2000 Packet Data Session bearers.
    -->
    <method name="CreateBearer">
      <arg name="properties" type="a{sv}" direction="in"  />
      <arg name="path"       type="o"     direction="out" />
    </method>

    <!--
        DeleteBearer:
        @bearer: Object path of the bearer to delete.

        Delete an existing packet data bearer.

        If the bearer is currently active and providing packet data server, it
        will be disconnected and that packet data service will terminate.
    -->
    <method name="DeleteBearer">
      <arg name="bearer" type="o" direction="in" />
    </method>

    <!--
        Reset:

        Clear non-persistent configuration and state, and return the device to
        a newly-powered-on state.

        This command may power-cycle the device.
    -->
    <method name="Reset" />

    <!--
        FactoryReset:
        @code: Carrier-supplied code required to reset the modem.

        Clear the modem's configuration (including persistent configuration and
        state), and return the device to a factory-default state.

        If not required by the modem, @code may be ignored.

        This command may or may not power-cycle the device.
    -->
    <method name="FactoryReset">
      <arg name="code" type="s" direction="in" />
    </method>

    <!--
        SetAllowedModes:
        @modes: Bitmask of <link linkend="MMModemMode">MMModemMode</link> values, to specify all the modes allowed in the modem.
        @preferred: Specific <link linkend="MMModemMode">MMModemMode</link> preferred among the ones allowed, if any.

        Set the access technologies (eg 2G/3G/4G preference) the device is
        currently allowed to use when connecting to a network.
    -->
    <method name="SetAllowedModes">
      <arg name="modes"     type="u" direction="in" />
      <arg name="preferred" type="u" direction="in" />
    </method>

    <!--
        SetAllowedBands:
        @bands: Bitmask of <link linkend="MMModemBand">MMModemBand</link> values, to specify all the bands allowed in the modem.

        Set the radio frequency and technology bands the device is currently
        allowed to use when connecting to a network.
    -->
    <method name="SetAllowedBands">
      <arg name="bands" type="t" direction="in" />
    </method>

    <!--
        StateChanged:
        @old: A <link linkend="MMModemState">MMModemState</link> value, specifying the new state.
        @new: A <link linkend="MMModemState">MMModemState</link> value, specifying the new state.
        @reason: A <link linkend="MMModemStateChangeReason">MMModemStateChangeReason</link> value, specifying the reason for this state change.

        The modem's state (see #org.freedesktop.ModemManager1.Modem:State) changed.
    -->
    <signal name="StateChanged">
      <arg name="old"    type="u" />
      <arg name="new"    type="u" />
      <arg name="reason" type="u" />
    </signal>

    <!--
        Sim:

        The path of the SIM object available in this device, if any.
    -->
    <property name="Sim" type="o" access="read" />

    <!--
        ModemCapabilities:

        Bitmask of <link linkend="MMModemCapability">MMModemCapability</link>
        values, specifying the generic family of access technologies the modem
        supports.

        Not all capabilities are available at the same time however; some
        modems require a firmware reload or other reinitialization to switch
        between e.g. CDMA/EVDO and GSM/UMTS.
    -->
    <property name="ModemCapabilities" type="u" access="read" />

    <!--
        CurrentCapabilities:

        Bitmask of <link linkend="MMModemCapability">MMModemCapability</link>
        values, specifying the  generic family of access technologies the modem
        currently supports without a firmware reload or reinitialization.
    -->
    <property name="CurrentCapabilities" type="u" access="read" />

    <!--
        MaxBearers:

        The maximum number of defined packet data bearers the modem supports.

        This is not the number of active/connected bearers the modem supports,
        but simply the number of bearers that may be defined at any given time.
        For example, POTS and CDMA2000-only devices support only one bearer,
        while GSM/UMTS devices typically support three or more, and any
        LTE-capable device (whether LTE-only, GSM/UMTS-capable, and/or
        CDMA2000-capable) also typically support three or more.
    -->
    <property name="MaxBearers" type="u" access="read" />

    <!--
        MaxActiveBearers:

        The maximum number of active packet data bearers the modem supports.

        POTS and CDMA2000-only devices support one active bearer, while GSM/UMTS
        and LTE-capable devices (including LTE/CDMA devices) typically support
        at least two active bearers.
    -->
    <property name="MaxActiveBearers" type="u" access="read" />

    <!--
        Manufacturer:

        The equipment manufacturer, as reported by the modem.
    -->
    <property name="Manufacturer" type="s" access="read" />

    <!--
        Model:

        The equipment model, as reported by the modem.
    -->
    <property name="Model" type="s" access="read" />

    <!--
        Revision:

        The revision identification of the software, as reported by the modem.
    -->
    <property name="Revision" type="s" access="read" />

    <!--
        DeviceIdentifier:

        A best-effort device identifier based on various device information like
        model name, firmware revision, USB/PCI/PCMCIA IDs, and other properties.

        This ID is not guaranteed to be unique and may be shared between
        identical devices with the same firmware, but is intended to be "unique
        enough" for use as a casual device identifier for various user
        experience operations.

        This is not the device's IMEI or ESN since those may not be available
        before unlocking the device via a PIN.
    -->
    <property name="DeviceIdentifier" type="s" access="read" />

    <!--
        Device:

        The physical modem device reference (ie, USB, PCI, PCMCIA device), which
        may be dependent upon the operating system.

        In Linux for example, this points to a sysfs path of the usb_device
        object.
    -->
    <property name="Device" type="s" access="read" />

    <!--
        Driver:

        The Operating System device driver handling communication with the modem
        hardware.
    -->
    <property name="Driver" type="s" access="read" />

    <!--
        Plugin:

        The name of the plugin handling this modem.
    -->
    <property name="Plugin" type="s" access="read" />

    <!--
        EquipmentIdentifier:

        The identity of the device.

        This will be the IMEI number for GSM devices and the hex-format ESN/MEID
        for CDMA devices.
    -->
    <property name="EquipmentIdentifier" type="s" access="read" />

    <!--
        UnlockRequired:

        Current lock state of the device, given as a
        <link linkend="MMModemLock">MMModemLock</link> value.
    -->
    <property name="UnlockRequired" type="u" access="read" />

    <!--
        UnlockRetries:

        The number of unlock retries remaining for the lock code given by the
        UnlockRequired property (if any), or 999 if the device does not support reporting
        unlock retries.
    -->
    <property name="UnlockRetries" type="u" access="read" />

    <!--
        PinRetryCounts:

        A dictionary in which the keys are <link linkend="MMModemLock">MMModemLock</link>
        flags, and the values are integers giving the number of PIN tries remaining
        before the code becomes blocked (requiring a PUK) or permanently blocked. Dictionary
        entries exist only for the codes for which the modem is able to report retry
        counts.
     -->
    <property name="PinRetryCounts" type="a{uu}" access="read" />

    <!--
        State:

        Overall state of the modem, given as a
        <link linkend="MMModemState">MMModemState</link> value.

        If the device's state cannot be determined,
        <link linkend="MM-MODEM-STATE-UNKNOWN:CAPS"><constant>MM_MODEM_STATE_UNKNOWN</constant></link>
        will be reported.
    -->
    <property name="State" type="u" access="read" />

    <!--
        AccessTechnology:

        The current network access technology used by the device to communicate
        with the network, given as a
        <link linkend="MMModemAccessTech">MMModemAccessTech</link> value.

        If the device's access technology cannot be determined,
        <link linkend="MM-MODEM-ACCESS-TECH-UNKNOWN:CAPS"><constant>MM_MODEM_ACCESS_TECH_UNKNOWN</constant></link>
        will be reported.
    -->
    <property name="AccessTechnology" type="u" access="read" />

    <!--
        SignalQuality:

        Signal quality in percent (0 - 100) of the dominant access technology
        the device is using to communicate with the network. Always 0 for POTS
        devices.

        The additional boolean value indicates if the quality value given was
        recently taken.
    -->
    <property name="SignalQuality" type="(ub)" access="read" />

    <!--
        SupportedModes:

        Bitmask of <link linkend="MMModemMode">MMModemMode</link> values,
        specifying the access technologies supported by the device.

        For POTS devices, only the
        <link linkend="MM-MODEM-MODE-ANY:CAPS"><constant>MM_MODEM_MODE_ANY</constant></link>
        mode will be returned.
    -->
    <property name="SupportedModes" type="u" access="read" />

    <!--
        AllowedModes:

        Bitmask of <link linkend="MMModemMode">MMModemMode</link> values,
        specifying the access technologies (eg 2G/3G/4G preference) the device
        is currently allowed to use when connecting to a network.

        It must be a subset of #org.freedesktop.ModemManager1.Modem:SupportedModes.

        For POTS devices, only the
        <link linkend="MM-MODEM-MODE-ANY:CAPS"><constant>MM_MODEM_MODE_ANY</constant></link>
        mode is supported.
    -->
    <property name="AllowedModes" type="u" access="read" />

    <!--
        PreferredMode:

        A single <link linkend="MMModemMode">MMModemMode</link> value,
        specifying the preferred access technology (eg 2G/3G/4G), among the
        ones defined in the allowed modes.

        It must be one of the modes configured in
        #org.freedesktop.ModemManager1.Modem:AllowedModes.
    -->
    <property name="PreferredMode" type="u" access="read" />

    <!--
        SupportedBands:

        Bitmask of <link linkend="MMModemBand">MMModemBand</link> values,
        specifying the radio frequency and technology bands supported by the
        device.

        For POTS devices, only the
        <link linkend="MM-MODEM-BAND-ANY:CAPS"><constant>MM_MODEM_BAND_ANY</constant></link>
        mode will be returned.
    -->
    <property name="SupportedBands" type="t" access="read" />

    <!--
        AllowedBands:

        Bitmask of <link linkend="MMModemBand">MMModemBand</link> values,
        specifying the radio frequency and technology bands the device is
        currently allowed to use when connecting to a network.

        It must be a subset of #org.freedesktop.ModemManager1.Modem:SupportedBands.

        For POTS devices, only the
        <link linkend="MM-MODEM-BAND-ANY:CAPS"><constant>MM_MODEM_BAND_ANY</constant></link>
        mode is supported.
    -->
    <property name="AllowedBands" type="t" access="read" />

    <!-- ENUMS -->

    <tp:flags name="MM_MODEM_CAPABILITIES" value-prefix="MM_MODEM_CAPABILITY" type="u">
      <tp:docstring>
        Flags describing one or more of the general access technology families
        that a modem supports.
      </tp:docstring>
      <tp:flag suffix="NONE" value="0x0">
        <tp:docstring>Modem has no capabilties.</tp:docstring>
      </tp:flag>
      <tp:flag suffix="POTS" value="0x1">
        <tp:docstring>
          Modem supports the analog wired telephone network (ie 56k dialup) and
          does not have wireless/cellular capabilities.
        </tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_EVDO" value="0x2">
        <tp:docstring>
          Modem supports at least one of CDMA 1xRTT, EVDO revision 0, EVDO
          revision A, or EVDO revision B.
        </tp:docstring>
      </tp:flag>
      <tp:flag suffix="GSM_UMTS" value="0x4">
        <tp:docstring>
          Modem supports at least one of GSM, GPRS, EDGE, UMTS, HSDPA, HSUPA, or
          HSPA+ packet switched data capability.
        </tp:docstring>
      </tp:flag>
      <tp:flag suffix="LTE" value="0x8">
        <tp:docstring>
          Modem has LTE data capability.
        </tp:docstring>
      </tp:flag>
      <tp:flag suffix="LTE_ADVANCED" value="0x10">
        <tp:docstring>
          Modem has LTE Advanced data capability.
        </tp:docstring>
      </tp:flag>
    </tp:flags>

    <tp:enum name="MM_MODEM_LOCK" type="u">
      <tp:enumvalue suffix="UNKNOWN" value="0">
        <tp:docstring>
          Lock reason unknown.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="NONE" value="1">
        <tp:docstring>
          Modem is unlocked.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="SIM_PIN" value="2">
        <tp:docstring>
          SIM requires the PIN code.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="SIM_PIN2" value="3">
        <tp:docstring>
          SIM requires the PIN2 code.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="SIM_PUK" value="4">
        <tp:docstring>
          SIM requires the PUK code
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="SIM_PUK2" value="5">
        <tp:docstring>
          SIM requires the PUK2 code
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="PH_SP_PIN" value="6">
        <tp:docstring>
          Modem requires the service provider PIN code.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="PH_SP_PUK" value="7">
        <tp:docstring>
          Modem requires the service provider PUK code.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="PH_NET_PIN" value="8">
        <tp:docstring>
          Modem requires the network PIN code.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="PH_NET_PUK" value="9">
        <tp:docstring>
          Modem requires the network PUK code.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="PH_SIM_PIN" value="10">
        <tp:docstring>
          Modem requires the PIN code.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="PH_CORP_PIN" value="11">
        <tp:docstring>
          Modem requires the corporate PIN code.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="PH_CORP_PUK" value="12">
        <tp:docstring>
          Modem requires the corporate PUK code.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="PH_FSIM_PIN" value="13">
        <tp:docstring>
          Modem requires the FSIM-PIN code.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="PH_FSIM_PUK" value="14">
        <tp:docstring>
          Modem requires the FSIM-PUK code.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="PH_NETSUB_PIN" value="15">
        <tp:docstring>
          Modem requires the network subset PIN code.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="PH_NETSUB_PUK" value="16">
        <tp:docstring>
          Modem requires the network subset PUK code.
        </tp:docstring>
      </tp:enumvalue>
    </tp:enum>

    <tp:enum name="MM_MODEM_STATE" type="u">
      <tp:enumvalue suffix="UNKNOWN" value="0">
        <tp:docstring>
          State unknown or not reportable.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="DISABLED" value="10">
        <tp:docstring>
          The modem is not enabled and is powered down.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="DISABLING" value="20">
        <tp:docstring>
          The modem is current transitioning to the DISABLED state.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="ENABLING" value="30">
        <tp:docstring>
          The modem is currently transitioning to the ENABLED state.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="ENABLED" value="40">
        <tp:docstring>
          The modem is enabled and powered on but not registered with a network
          provider and not available for data connections.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="SEARCHING" value="50">
        <tp:docstring>
          The modem is searching for a network provider to register with.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="REGISTERED" value="60">
        <tp:docstring>
          The modem is registered with a network provider, and data connections
          and messaging may be available for use.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="DISCONNECTING" value="70">
        <tp:docstring>
          The modem is disconnecting and deactivating the last active packet
          data bearer.  This state will not be entered if more than one packet
          data bearer is active and one of the active bearers is deactivated.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="CONNECTING" value="80">
        <tp:docstring>
          The modem is activating and connecting the first packet data bearer.
          Subsequent bearer activations when another bearer is already active
          do not cause this state to be entered.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="CONNECTED" value="90">
        <tp:docstring>
          One or more packet data bearers is active and connected.
        </tp:docstring>
      </tp:enumvalue>
    </tp:enum>

    <tp:enum name="MM_MODEM_STATE_CHANGED_REASON" type="u">
      <tp:enumvalue suffix="UNKNOWN" value="0">
        <tp:docstring>
          Reason unknown or not reportable.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="USER_REQUESTED" value="1">
        <tp:docstring>
          State change was requested by an interface user.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="SUSPEND" value="2">
        <tp:docstring>
          State change was caused by a system suspend.
        </tp:docstring>
      </tp:enumvalue>
    </tp:enum>

    <tp:enum name="MM_MODEM_ACCESS_TECH" type="u">
      <tp:docstring>
        Describes various access technologies that a device uses when registered
        with or connected to a network.
      </tp:docstring>
      <tp:enumvalue suffix="UNKNOWN" value="0">
	<tp:docstring>The access technology used is unknown</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="POTS" value="1">
	<tp:docstring>Analog wireline telephone</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="GSM" value="2">
	<tp:docstring>GSM</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="GSM_COMPACT" value="3">
	<tp:docstring>Compact GSM</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="GPRS" value="4">
	<tp:docstring>GPRS</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="EDGE" value="5">
	<tp:docstring>EDGE (ETSI 27.007: "GSM w/EGPRS")</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="UMTS" value="6">
	<tp:docstring>UMTS (ETSI 27.007: "UTRAN")</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="HSDPA" value="7">
	<tp:docstring>HSDPA (ETSI 27.007: "UTRAN w/HSDPA")</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="HSUPA" value="8">
	<tp:docstring>HSUPA (ETSI 27.007: "UTRAN w/HSUPA")</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="HSPA" value="9">
	<tp:docstring>HSPA (ETSI 27.007: "UTRAN w/HSDPA and HSUPA")</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="HSPA_PLUS" value="10">
	<tp:docstring>HSPA+ (ETSI 27.007: "UTRAN w/HSPA+")</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="1XRTT" value="11">
	<tp:docstring>CDMA2000 1xRTT</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="EVDO0" value="12">
	<tp:docstring>CDMA2000 EVDO revision 0</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="EVDOA" value="13">
	<tp:docstring>CDMA2000 EVDO revision A</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="EVDOB" value="14">
	<tp:docstring>CDMA2000 EVDO revision B</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="LTE" value="15">
	<tp:docstring>LTE (ETSI 27.007: "E-UTRAN")</tp:docstring>
      </tp:enumvalue>
    </tp:enum>

    <tp:enum name="MM_MODEM_MODE" type="u">
      <tp:docstring>
        Bitfield to indicate which access modes are supported, allowed or
        preferred in a given device.
      </tp:docstring>
      <tp:enumvalue suffix="NONE" value="0x00">
	<tp:docstring>None</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="1G" value="0x01">
        <tp:docstring>CSD, GSM</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="2G" value="0x02">
        <tp:docstring>GPRS, EDGE</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="3G" value="0x04">
        <tp:docstring>UMTS, HSxPA</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="4G" value="0x08">
        <tp:docstring>LTE</tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="ANY" value="0xFFFFFFFF">
	<tp:docstring>
	  Any mode can be used (only this value allowed for POTS modems)
	</tp:docstring>
    </tp:enum>

    <tp:flags name="MM_MODEM_BAND" value-prefix="MM_MODEM_BAND" type="u">
      <tp:docstring>
        A 64-bit wide bitfield describing the specific radio bands supported by
        the device and the radio bands the device is allowed to use when
        connecting to a mobile network.
      </tp:docstring>
      <tp:flag suffix="UNKNOWN" value="0x0">
        <tp:docstring>Unknown or invalid band</tp:docstring>
      </tp:flag>
      <tp:flag suffix="ANY" value="0x1">
        <tp:docstring>For certain operations, allow the modem to select a band automatically.</tp:docstring>
      </tp:flag>

      <!-- GSM/UMTS/3GPP bands -->
      <tp:flag suffix="EGSM" value="0x2">
        <tp:docstring>GSM/GPRS/EDGE 900 MHz</tp:docstring>
      </tp:flag>
      <tp:flag suffix="DCS" value="0x4">
        <tp:docstring>GSM/GPRS/EDGE 1800 MHz</tp:docstring>
      </tp:flag>
      <tp:flag suffix="PCS" value="0x8">
        <tp:docstring>GSM/GPRS/EDGE 1900 MHz</tp:docstring>
      </tp:flag>
      <tp:flag suffix="G850" value="0x10">
        <tp:docstring>GSM/GPRS/EDGE 850 MHz</tp:docstring>
      </tp:flag>
      <tp:flag suffix="U2100" value="0x20">
        <tp:docstring>WCDMA 2100 MHz (Class I)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="U1800" value="0x40">
        <tp:docstring>WCDMA 3GPP 1800 MHz (Class III)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="U17IV" value="0x80">
        <tp:docstring>WCDMA 3GPP AWS 1700/2100 MHz (Class IV)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="U800" value="0x100">
        <tp:docstring>WCDMA 3GPP UMTS 800 MHz (Class VI)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="U850" value="0x200">
        <tp:docstring>WCDMA 3GPP UMTS 850 MHz (Class V)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="U900" value="0x400">
        <tp:docstring>WCDMA 3GPP UMTS 900 MHz (Class VIII)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="U17IX" value="0x800">
        <tp:docstring>WCDMA 3GPP UMTS 1700 MHz (Class IX)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="U1900" value="0x1000">
        <tp:docstring>WCDMA 3GPP UMTS 1900 MHz (Class II)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="U2600" value="0x2000">
        <tp:docstring>WCDMA 3GPP UMTS 2600 MHz (Class VII, internal)</tp:docstring>
      </tp:flag>

      <!-- CDMA Band Classes (see 3GPP2 C.S0057-C) -->
      <tp:flag suffix="CDMA_BC0_CELLULAR_800" value="0x0000000100000000">
        <tp:docstring>CDMA Band Class 0 (US Cellular 850MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC1_PCS_1900" value="0x0000000200000000">
        <tp:docstring>CDMA Band Class 1 (US PCS 1900MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC2_TACS" value="0x0000000400000000">
        <tp:docstring>CDMA Band Class 2 (UK TACS 900MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC3_JTACS" value="0x0000000800000000">
        <tp:docstring>CDMA Band Class 3 (Japanese TACS)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC4_KOREAN_PCS" value="0x0000001000000000">
        <tp:docstring>CDMA Band Class 4 (Korean PCS)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC5_NMT450" value="0x0000002000000000">
        <tp:docstring>CDMA Band Class 5 (NMT 450MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC6_IMT2000" value="0x0000004000000000">
        <tp:docstring>CDMA Band Class 6 (IMT2000 2100MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC7_CELLULAR_700" value="0x0000008000000000">
        <tp:docstring>CDMA Band Class 7 (Cellular 700MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC8_1800" value="0x0000010000000000">
        <tp:docstring>CDMA Band Class 8 (1800MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC9_900" value="0x0000020000000000">
        <tp:docstring>CDMA Band Class 9 (900MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC10_SECONDARY_800" value="0x0000040000000000">
        <tp:docstring>CDMA Band Class 10 (US Secondary 800)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC11_PAMR_400" value="0x0000080000000000">
        <tp:docstring>CDMA Band Class 11 (European PAMR 400MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC12_PAMR_800" value="0x0000100000000000">
        <tp:docstring>CDMA Band Class 12 (PAMR 800MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC13_IMT2000_2500" value="0x0000200000000000">
        <tp:docstring>CDMA Band Class 13 (IMT2000 2500MHz Expansion)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC14_PCS2_1900" value="0x0000400000000000">
        <tp:docstring>CDMA Band Class 14 (More US PCS 1900MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC15_AWS" value="0x0000800000000000">
        <tp:docstring>CDMA Band Class 15 (AWS 1700MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC16_US_2500" value="0x0001000000000000">
        <tp:docstring>CDMA Band Class 16 (US 2500MHz)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC17_US_FLO_2500" value="0x0002000000000000">
        <tp:docstring>CDMA Band Class 17 (US 2500MHz Forward Link Only)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC18_US_PS_700" value="0x0004000000000000">
        <tp:docstring>CDMA Band Class 18 (US 700MHz Public Safety)</tp:docstring>
      </tp:flag>
      <tp:flag suffix="CDMA_BC19_US_LOWER_700" value="0x0008000000000000">
        <tp:docstring>CDMA Band Class 19 (US Lower 700MHz)</tp:docstring>
      </tp:flag>
    </tp:flags>

  </interface>
</node>
