<?xml version="1.0" encoding="UTF-8" ?>

<!--
 ModemManager 0.6 Interface Specification

   Copyright (C) 2008 Novell, Inc.
   Copyright (C) 2008-2011 Red Hat, Inc.
   Copyright (C) 2011 The Chromium OS Authors
   Copyright (C) 2011 Google, Inc.
-->

<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">

  <!--
      org.freedesktop.ModemManager1.Modem.Location:
      @short_description: The ModemManager Location interface.

      The Location interface allows devices to provide location information to
      client applications. Not all devices can provide this information, or even
      if they do, they may not be able to provide it while a data session is
      active.
  -->
  <interface name="org.freedesktop.ModemManager1.Modem.Location">

    <!--
        Enable:
        @enable: %TRUE to enable location information gathering, %FALSE to disable.
        @signal_location: Flag to control whether the device emits signals with the new location information. This argument is ignored when disabling location information gathering.

        Enable or disable location information gathering. This method may
        require the client to authenticate itself. This method may also cause
        any necessary functionality of the mobile be be turned on, including
        enabling the modem device itself.

        When signals are emitted, any client application (including malicious
        ones!) can listen for location updates unless D-Bus permissions restrict
        these signals from certain users. If further security is desired, the
        @signal_location argument can be set to %FALSE to disable location
        updates via D-Bus signals and require applications to call
        authenticated APIs (like
        <link linkend="gdbus-method-org-freedesktop-ModemManager1-Modem-Location.GetLocation">GetLocation()</link>
        ) to get
        location information.
    -->
    <method name="Enable">
      <arg name="enable"          type="b" direction="in" />
      <arg name="signal_location" type="b" direction="in" />
    </method>

    <!--
        GetLocation:
        @location: Dictionary of available location information when location information gathering is enabled.

        Return current location information, if any. If the modem supports
        multiple location types it may return more than one. See the
        #org.freedesktop.ModemManager1.Modem.Location:Location property
        for more information on the dictionary returned at @location.

        This method may require the client to authenticate itself.
    -->
    <method name="GetLocation">
      <arg name="Location" type="a{uv}" direction="out" />
    </method>

    <!--
        Capabilities:

        Bitmask of <link linkend="MMModemLocationSource">MMModemLocationSource</link>
        values, specifying the location retrieval capabilities of the device.
    -->
    <property name="Capabilities" type="u" access="read" />

    <!--
        Enabled:

        %TRUE if location information gathering is enabled for this device,
        %FALSE if it is disabled. When disabled, the device will not provide
        location information.
    -->
    <property name="Enabled" type="b" access="read" />

    <!--
        SignalsLocation:

        %TRUE if location updates will be emitted via D-Bus signals, %FALSE if
        location updates will not be emitted.

        See the
        <link linkend="gdbus-method-org-freedesktop-ModemManager1-Modem-Location.Enable">Enable()</link>
        method for more information.
    -->
    <property name="SignalsLocation" type="b" access="read" />

    <!--
        Location:

        Dictionary of available location information when location information
        gathering is enabled. If the modem supports multiple location types it
        may return more than one here.

        Note that if the device was told not to emit updated location
        information when location information gathering was initially enabled,
        this property may not return any location information for security reasons.

        This dictionary is composed of a
        <link linkend="MMModemLocationSource">MMModemLocationSource</link>
        key, with an associated data which contains type-specific location
        information:

        <variablelist>
        <varlistentry><term><link linkend="MM-MODEM-LOCATION-SOURCE-GSM-LAC-CI:CAPS">MM_MODEM_LOCATION_SOURCE_GSM_LAC_CI</link></term>
          <listitem>
            <para>
              Devices supporting this
              capability return a string in the format <literal>"MCC,MNC,LAC,CI"</literal> (without the
              quotes of course) where the following applies:
            </para>
            <variablelist>
              <varlistentry><term><literal>MCC</literal></term>
                <listitem>
                  This is the three-digit ITU E.212 Mobile Country Code of the
                  network provider to which the mobile is currently registered.
                  e.g. <literal>"310"</literal>.
                </listitem>
              </varlistentry>
              <varlistentry><term><literal>MNC</literal></term>
                <listitem>
                  This is the two- or three-digit GSM Mobile Network Code of the
                  network provider to which the mobile is currently registered.
                  e.g. <literal>"26"</literal> or <literal>"260"</literal>.
                </listitem>
              </varlistentry>
              <varlistentry><term><literal>LAC</literal></term>
                <listitem>
                  This is the two-byte Location Area Code of the base station with
                  which the mobile is registered, in upper-case hexadecimal format
                  without leading zeros, as specified in 3GPP TS 27.007 section
                  10.1.19. e.g. <literal>"84CD"</literal>.
                </listitem>
              </varlistentry>
              <varlistentry><term><literal>CI</literal></term>
                <listitem>
                  This is the two- or four-byte Cell Identifier with which the mobile
                  is registered, in upper-case hexadecimal format without leading
                  zeros, as specified in 3GPP TS 27.007.
                  e.g. <literal>"2BAF"</literal> or <literal>"D30156"</literal>.
                </listitem>
              </varlistentry>
            </variablelist>
            <para>
              The entire string may only be composed of the ASCII digits <literal>[0-9]</literal>,
              the alphabetical characters <literal>[A-F]</literal>, and the comma (<literal>,</literal>) character.
              No other characters are allowed.  For example: <literal>"310,260,8BE3,2BAF"</literal> or
              <literal>"250,40,CE00,1CEAD8F0"</literal>.
            </para>
            <para>
              If any of these four items (<literal>MCC</literal>, <literal>MNC</literal>,
              <literal>LAC</literal>, <literal>CI</literal>) is unknown or the
              mobile is not registered with a network, then the
              <link linkend="MM-MODEM-LOCATION-SOURCE-GSM-LAC-CI:CAPS">MM_MODEM_LOCATION_SOURCE_GSM_LAC_CI</link>
              location
              information item should not be provided as a returned value from the
              <link linkend="gdbus-method-org-freedesktop-ModemManager1-Modem-Location.GetLocation">GetLocation()</link>
              method or in the #org.freedesktop.ModemManager1.Modem.Location:Location property.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry><term><link linkend="MM-MODEM-LOCATION-SOURCE-GPS-RAW:CAPS">MM_MODEM_LOCATION_SOURCE_GPS_RAW</link></term>
          <listitem>
            <para>
              Devices supporting this
              capability return a D-Bus dictionary (signature <literal>"a{sv}"</literal>) mapping well-known
              keys to values with defined formats.
            </para>
            <para>
              The allowed key/value pairs and their formats are:
            </para>
            <variablelist>
              <varlistentry><term><literal>"latitude"</literal></term>
                <listitem>
                  (Required) Latitude in Decimal Degrees (positive numbers mean N quadrasphere, negative mean S quadrasphere), given as a double value (signature <literal>"d"</literal>). e.g. <literal>38.889722</literal>, meaning 38d 53' 22" N.
                </listitem>
              </varlistentry>
              <varlistentry><term><literal>"longitude"</literal></term>
                <listitem>
                  (Required) Longitude in Decimal Degrees (positive numbers mean E quadrasphere, negative mean W quadrasphere), given as a double value (signature <literal>"d"</literal>). e.g. <literal>-77.008889</literal>, meaning 77d 0' 32" W.
                </listitem>
              </varlistentry>
              <varlistentry><term><literal>"altitude"</literal></term>
                <listitem>
                  (Optional) Altitude above sea level in meters, given as a double value (signature <literal>"d"</literal>). e.g. <literal>33.5</literal>.
                </listitem>
              </varlistentry>
              <varlistentry><term><literal>"horizontal-velocity"</literal></term>
                <listitem>
                  (Optional) Horizontal velocity in meters-per-second, given as a double value (signature <literal>"d"</literal>). e.g. <literal>0.5</literal>.
                </listitem>
              </varlistentry>
              <varlistentry><term><literal>"vertical-velocity"</literal></term>
                <listitem>
                  (Optional) Vertical velocity in meters-per-second, given as a double value (signature <literal>"d"</literal>). e.g. <literal>0.01</literal>.
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
        <varlistentry><term><link linkend="MM-MODEM-LOCATION-SOURCE-GPS-NMEA:CAPS">MM_MODEM_LOCATION_SOURCE_GPS_NMEA</link></term>
          <listitem>
            <para>
              Devices supporting this capability return
              a string containing one or more NMEA sentences (D-Bus signature <literal>'s'</literal>).
              The manager will cache the most recent NMEA sentence of each type for
              a period of time not less than 30 seconds.  When reporting multiple
              NMEA sentences, sentences shall be separated by an ASCII Carriage
              Return and Line Feed (<literal>&lt;CR&gt;&lt;LF&gt;</literal>) sequence.
            </para>
            <para>
              For example, if the device sends a <literal>$GPRMC</literal> sentence immediately
              followed by a <literal>$GPGGA</literal> sentence, the reported location string would be
              (where of course the <literal>&lt;CR&gt;&lt;LF&gt;</literal> is replaced with the actual
              ASCII <literal>CR</literal> (0x0D) and <literal>LF</literal> (0x0A) control characters):
              <para><literal>
                $GPRMC,134523.92,V,,,,,,,030136,,,N*73&lt;CR&gt;&lt;LF&gt;$GPGGA,,,,,,0,00,0.5,,M,0.0001999,M,0.0000099,0000*45
              </literal></para>
              If the device sends a new <literal>$GPRMC</literal> three seconds later, the new <literal>$GPRMC</literal>
              replaces the previously received <literal>$GPRMC</literal> sentence, and the updated
              string would be:
              <para><literal>
                $GPRMC,134526.92,V,,,,,,,030136,,,N*76&lt;CR&gt;&lt;LF&gt;$GPGGA,,,,,,0,00,0.5,,M,0.0001999,M,0.0000099,0000*45
              </literal></para>
              If the device then sends a <literal>$GPGSA</literal> sentence about 5 seconds later, the
              <literal>$GPGSA</literal> sentence is added to the string (since no <literal>$GPGSA</literal> sentence was
              literalviously received in this session), the updated string would be:
              <para><literal>
                $GPRMC,134526.92,V,,,,,,,030136,,,N*76&lt;CR&gt;&lt;LF&gt;$GPGGA,,,,,,0,00,0.5,,M,0.0001999,M,0.0000099,0000*45&lt;CR&gt;&lt;LF&gt;$GPGSA,A,1,,,,,,,,,,,,,1.1,0.5,1.0*34
              </literal></para>
              The manager may discard any cached sentences older than 30 seconds.
            </para>
            <para>
              This allows clients to read the latest positioning data as soon as
              possible after they start, even if the device is not providing
              frequent location data updates.
            </para>
          </listitem>
        </varlistentry>
        </variablelist>
    -->
    <property name="Location" type="a{uv}" access="read" />

    <!-- ENUMS -->

    <tp:flags name="MM_MODEM_LOCATION_CAPABILITIES" value-prefix="MM_MODEM_LOCATION_CAPABILITY" type="u">
      <tp:flag suffix="UNKNOWN" value="0x0">
        <tp:docstring><p>Unknown or no capabilties.</p></tp:docstring>
      </tp:flag>
      <tp:flag suffix="GPS_NMEA" value="0x1">
        <tp:docstring>
          <p>For capability reporting, indicates the device is capable of
          providing GPS NMEA-format location information.</p>

          <p>For location reporting, devices supporting this capability return
          a string containing one or more NMEA sentences (D-Bus signature 's').
          The manager will cache the most recent NMEA sentence of each type for
          a period of time not less than 30 seconds.  When reporting multiple
          NMEA sentences, sentences shall be separated by an ASCII Carriage
          Return and Line Feed (&lt;CR&gt;&lt;LF&gt;) sequence.
          </p>
          <p>
          For example, if the device sends a $GPRMC sentence immediately
          followed by a $GPGGA sentence, the reported location string would be
          (where of course the &lt;CR&gt;&lt;LF&gt; is replaced with the actual
          ASCII CR (0x0D) and LF (0x0A) control characters):
          <pre>
          $GPRMC,134523.92,V,,,,,,,030136,,,N*73&lt;CR&gt;&lt;LF&gt;$GPGGA,,,,,,0,00,0.5,,M,0.0001999,M,0.0000099,0000*45
          </pre>
          If the device sends a new $GPRMC three seconds later, the new $GPRMC
          replaces the previously received $GPRMC sentence, and the updated 
          string would be:
          <pre>
          $GPRMC,134526.92,V,,,,,,,030136,,,N*76&lt;CR&gt;&lt;LF&gt;$GPGGA,,,,,,0,00,0.5,,M,0.0001999,M,0.0000099,0000*45
          </pre>
          If the device then sends a $GPGSA sentence about 5 seconds later, the
          $GPGSA sentence is added to the string (since no $GPGSA sentence was
          previously received in this session), the updated string would be:
          <pre>
          $GPRMC,134526.92,V,,,,,,,030136,,,N*76&lt;CR&gt;&lt;LF&gt;$GPGGA,,,,,,0,00,0.5,,M,0.0001999,M,0.0000099,0000*45&lt;CR&gt;&lt;LF&gt;$GPGSA,A,1,,,,,,,,,,,,,1.1,0.5,1.0*34
          </pre>
          The manager may discard any cached sentences older than 30 seconds.
          </p>
          <p>This allows clients to read the latest positioning data as soon as
          possible after they start, even if the device is not providing
          frequent location data updates.
          </p>
        </tp:docstring>
      </tp:flag>
      <tp:flag suffix="GSM_LAC_CI" value="0x2">
        <tp:docstring>
          <p>For capability reporting, indicates the device is capable of
          providing GSM Location Area Code/Cell ID location information.</p>

          <p>For location reporting, devices supporting this
          capability return a string in the format "MCC,MNC,LAC,CI" (without the
          quotes of course) where the following applies:</p>
          <ul>
            <li>
              MCC is the three-digit ITU E.212 Mobile Country Code of the
              network provider to which the mobile is currently registered.
              This value should be the same MCC as reported by the
              org.freedesktop.Modem.Gsm.Network.GetRegistrationInfo() method's
              returned "operator code" argument.
              e.g. "310"
            </li>
            <li>
              MNC is the two- or three-digit GSM Mobile Network Code of the
              network provider to which the mobile is currently registered.
              This value should be the same MCC as reported by the
              org.freedesktop.Modem.Gsm.Network.GetRegistrationInfo() method's
              returned "operator code" argument.
              e.g. "26" or "260"
            </li>
            <li>
              LAC is the two-byte Location Area Code of the base station with
              which the mobile is registered, in upper-case hexadecimal format
              without leading zeros, as specified in 3GPP TS 27.007 section
              10.1.19.  e.g. "84CD".
            </li>
            <li>
              CI is the two- or four-byte Cell Identifier with which the mobile
              is registered, in upper-case hexadecimal format without leading
              zeros, as specified in 3GPP TS 27.007.  e.g. "2BAF" or "D30156".
            </li>
          </ul>
          <p>The entire string may only be composed of the ASCII digits [0-9], 
          the alphabetical characters [A-F], and the comma (,) character.  No
          other characters are allowed.  For example: "310,260,8BE3,2BAF" or
          "250,40,CE00,1CEAD8F0".</p>

          <p>If any of these four items (MCC,MNC,LAC,CI) is unknown or the
          mobile is not registered with a network, then the GSM_LAC_CI location
          information item should not be provided as a returned value from the
          GetLocation() method or in the Location property.</p>
        </tp:docstring>
      </tp:flag>
      <tp:flag suffix="GPS_RAW" value="0x4">
        <tp:docstring>
          <p>For capability reporting, indicates the device is capable of
          providing raw GPS information using a series of defined key/value
          pairs.</p>

          <p>For location reporting, devices supporting this
          capability return a D-Bus dict (signature a{sv}) mapping well-known
          keys to values with defined formats.  The allowed key/value pairs
          and their formats are:</p>
          <table>
            <tr><th>Key</th><th>Value Type</th><th>Value contents</th><th>Example</th></tr>
            <tr>
              <td>latitude</td>
              <td>d</td>
              <td>Latitude in Decimal Degrees (positive numbers mean N quadrasphere, negative mean S quadrasphere)</td>
              <td>38.889722 (ie, 38d 53' 22" N)</td>
            </tr>
            <tr>
              <td>longitude</td>
              <td>d</td>
              <td>Longitude in Decimal Degrees (positive numbers mean E quadrasphere, negative mean W quadrasphere)</td>
              <td>-77.008889 (ie, 77d 0' 32" W)</td>
            </tr>
            <tr>
              <td>altitude</td>
              <td>d</td>
              <td>Altitude above sea level in meters</td>
              <td>33.5</td>
            </tr>
            <tr>
              <td>horiz-velocity</td>
              <td>d</td>
              <td>Horizontal velocity in meters-per-second</td>
              <td>.5</td>
            </tr>
            <tr>
              <td>vert-velocity</td>
              <td>d</td>
              <td>Vertical velocity in meters-per-second</td>
              <td>.01</td>
            </tr>
          </table>
          <p>The 'latitude' and 'longitude' keys are required; other keys are
          optional.</p>
        </tp:docstring>
      </tp:flag>
    </tp:flags>

  </interface>
</node>

